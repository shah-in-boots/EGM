% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wfdb-native.R
\name{read_wfdb_native}
\alias{read_wfdb_native}
\alias{read_header_native}
\alias{read_signal_native}
\alias{write_wfdb_native}
\title{Native WFDB readers and writers}
\usage{
read_wfdb_native(
  record,
  record_dir = ".",
  begin = 0,
  end = NA_integer_,
  interval = NA_integer_,
  units = c("digital", "physical"),
  channels = character(),
  ...
)

read_header_native(record, record_dir = ".", ...)

read_signal_native(
  record,
  record_dir = ".",
  header = NULL,
  begin = 0,
  end = NA_integer_,
  interval = NA_integer_,
  units = c("digital", "physical"),
  channels = character(),
  ...
)

write_wfdb_native(
  data,
  record,
  record_dir = ".",
  header = NULL,
  info_strings = list(),
  ...
)
}
\arguments{
\item{record}{String that will be used to name the WFDB record. Cannot
include extensions, and is not a filepath. alphanumeric characters are
acceptable, as well as hyphens (-) and underscores (_)}

\item{record_dir}{File path of directory that should be used read and write
files. Defaults to current directory.}

\item{begin, end, interval}{Timepoint as an \code{integer} (representing seconds),
which is converted to an index position based on sampling frequency. The
default is to start at the beginning of the record. If \code{end} or \code{interval}
are given, the earlier of the two will be returned. The \code{end} argument
gives a time index to read until. The \code{interval} argument is the length of
time past the start point.}

\item{units}{A \code{character} string representing either \emph{digital} (DEFAULT) or \emph{physical}
units that should be used, if available.
\itemize{
\item digital = Index in sample number, signal in integers (A/D units)
\item physical = Index in elapsed time, signal in decimal voltage (e.g. mV).
This will \strong{include 1 additional row over the header/column names} that
describes units
}}

\item{channels}{Either the signal/channel in a \code{character} vector as a name or number.
Allows for duplication of signal or to re-order signal if needed. If
nothing is given, will default to all channels available.}

\item{...}{Additional arguments to be passed to the function}

\item{header}{Optional header information that has already been parsed by
\code{\link[=read_header_native]{read_header_native()}}. If \code{NULL}, the header file is read automatically.}

\item{data}{Signal data to be written. This can be an \code{egm} object, a
\code{signal_table}, or any data frame coercible to those classes. When an
\code{egm} object is supplied, header information is retrieved from the object.}

\item{info_strings}{Optional named list of character vectors to append to the
info string section of the output header file when writing.}
}
\value{
\itemize{
\item \code{read_wfdb_native()} returns an \code{\link[=egm]{egm()}} object containing the signal,
header, and an empty annotation table.
\item \code{read_header_native()} returns a \code{\link[=header_table]{header_table()}} object.
\item \code{read_signal_native()} returns a \code{\link[=signal_table]{signal_table()}} object.
\item \code{write_wfdb_native()} invisibly returns the path to the written record.
}
}
\description{
These functions provide native replacements for the WFDB \code{rdsamp} and
\code{wrsamp} utilities so that WFDB header and signal files can be read and
written without requiring the external WFDB software. The helpers
\code{\link[=read_header_native]{read_header_native()}} and \code{\link[=read_signal_native]{read_signal_native()}} return the individual
components used by \code{\link[=read_wfdb_native]{read_wfdb_native()}}, while \code{\link[=write_wfdb_native]{write_wfdb_native()}} mirrors
the behaviour of \code{wrsamp} using R and C++ implementations within this
package.
}
